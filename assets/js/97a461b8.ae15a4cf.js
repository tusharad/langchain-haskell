"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[669],{5003:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"concepts/OutputParser","title":"Output Parser","description":"OutputParser typeclass provides an interface that parses Text (usually LLM output) into desired type.","source":"@site/docs/concepts/OutputParser.md","sourceDirName":"concepts","slug":"/concepts/OutputParser","permalink":"/langchain-hs/docs/concepts/OutputParser","draft":false,"unlisted":false,"editUrl":"https://github.com/tusharad/langchain-hs/docs/concepts/OutputParser.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Memory","permalink":"/langchain-hs/docs/concepts/Memory"},"next":{"title":"Callbacks","permalink":"/langchain-hs/docs/concepts/Callback"}}');var r=s(4848),o=s(8453);const c={sidebar_position:5},a="Output Parser",i={},u=[];function p(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"output-parser",children:"Output Parser"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"OutputParser"})," typeclass provides an interface that parses Text (usually LLM output) into desired type.\nlangchain-hs provides some common types, out of the box:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"CommaSeparatedList"}),"\n",(0,r.jsx)(t.li,{children:"JSONOutputStructure"}),"\n",(0,r.jsx)(t.li,{children:"NumberSeparatedList"}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(6540);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);